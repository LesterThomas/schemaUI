{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "Service.schema.json",
  "title": "Service",
  "definitions": {
    "Service": {
      "$id": "#Service",
      "description": "Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the service",
          "type": "string"
        },
        "href": {
          "description": "Reference of the service",
          "type": "string"
        },
        "serviceType": {
          "description": "Business type of the service",
          "type": "string"
        },
        "name": {
          "description": "Name of the service",
          "type": "string"
        },
        "description": {
          "description": "Free-text description of the service",
          "type": "string"
        },
        "state": {
          "description": "The life cycle state of the service, such as: feasibilityChecked, designed, reserved, active, inactive, terminated",
          "$ref": "ServiceStateType.schema.json#/definitions/ServiceStateType"
        },
        "category": {
          "type": "string",
          "description": "Is it a customer facing or resource facing service"
        },
        "isServiceEnabled": {
          "type": "boolean",
          "description": "If FALSE, this particular Service has NOT been enabled for use"
        },
        "hasStarted": {
          "type": "boolean",
          "description": "If TRUE, this Service has already been started"
        },
        "startMode": {
          "type": "string",
          "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above"
        },
        "isStateful": {
          "type": "boolean",
          "description": "If TRUE, this Service can be changed without affecting any other services"
        },
        "serviceDate": {
          "description": "Date when the service was created (whatever its status).",
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the service starts"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the service ends"
        },
        "serviceSpecification": {
          "description": "The specification from which this service was instantiated",
          "$ref": "ServiceSpecificationRef.schema.json#/definitions/ServiceSpecificationRef"
        },
        "serviceCharacteristic": {
          "type": "array",
          "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
          "items": {
            "$ref": "../Common/Characteristic.schema.json#/definitions/Characteristic"
          }
        },
        "serviceRelationship": {
          "type": "array",
          "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory (useful for describing relies-on, relies-from between CFS for example).",
          "items": {
            "$ref": "ServiceRelationship.schema.json#/definitions/ServiceRelationship"
          }
        },
        "supportingService": {
          "type": "array",
          "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS).",
          "items": {
            "$ref": "ServiceRef.schema.json#/definitions/ServiceRef"
          }
        },
        "supportingResource": {
          "type": "array",
          "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources.",
          "items": {
            "$ref": "../Resource/ResourceRef.schema.json#/definitions/ResourceRef"
          }
        },
        "relatedParty": {
          "type": "array",
          "description": "A list of related party references (RelatedParty [1..*]). A related party defines party or party role linked to a specific entity.",
          "items": {
            "$ref": "../EngagedParty/RelatedParty.schema.json#/definitions/RelatedParty"
          }
        },
        "serviceOrder": {
          "type": "array",
          "description": "A list of service orders related to this service",
          "items": {
            "$ref": "ServiceOrderRef.schema.json#/definitions/ServiceOrderRef"
          }
        },
        "place": {
          "type": "array",
          "description": "A list of places related to this service, e.g. where the service is installed, a delivery address for equipment, etc.",
          "items": {
            "$ref": "../Common/Place.schema.json#/definitions/Place"
          }
        },
        "note": {
          "type": "array",
          "description": "A list of notes made on this service",
          "items": {
            "$ref": "../Common/Note.schema.json#/definitions/Note"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../Common/Entity.schema.json#Entity"
        }
      ]
    }
  },
  "$comment:status": "Not validated"
}